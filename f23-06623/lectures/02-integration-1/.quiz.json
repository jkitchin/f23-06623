[
  {
    "question": "Which is the correct argument in matplotlib to plot data using black circles connected with a solid line?",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "ko-",
        "correct": true
      },
      {
        "answer": "bo-",
        "correct": false
      },
      {
        "answer": "blo-",
        "correct": false
      },
      {
        "answer": "bko-",
        "correct": false
      }
    ],
    "tag": "matplotlib",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "<p>What will be the output of the following code:</p><br><p><pre>x = np.array([4, 3, 2, 1])<br>for I in x:<br>    print(I)</pre></p>",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "error",
        "correct": false
      },
      {
        "answer": "4, 3, 2, 1",
        "correct": true
      },
      {
        "answer": "1, 2, 3, 4",
        "correct": false
      },
      {
        "answer": "I, I, I, I",
        "correct": false
      }
    ],
    "tag": "arrays",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "Which of the following will give an error?",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "np.trapz(y)",
        "correct": false
      },
      {
        "answer": "np.trapz(y, x, 2)",
        "correct": false
      },
      {
        "answer": "np.trapz(y, None)",
        "correct": false
      },
      {
        "answer": "np.trapz(y, None, None)",
        "correct": true
      }
    ],
    "tag": "numpy",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "np.trapz() returns a ",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "int",
        "correct": false
      },
      {
        "answer": "float",
        "correct": true
      },
      {
        "answer": "array",
        "correct": false
      },
      {
        "answer": "depends on the input",
        "correct": false
      }
    ],
    "tag": "numpy",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "Simpson's method for integration requires ",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "even number of samples",
        "correct": false
      },
      {
        "answer": "odd number of intervals",
        "correct": false
      },
      {
        "answer": "even number of intervals",
        "correct": true
      },
      {
        "answer": "all of the above",
        "correct": false
      }
    ],
    "tag": "scipy",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "In using scipy.integrate.simps, for unequally spaced points",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "the result cannot be exact",
        "correct": false
      },
      {
        "answer": "the result is always exact",
        "correct": false
      },
      {
        "answer": "the result is exact only if the target function is of order of 3 or more",
        "correct": false
      },
      {
        "answer": "the result is exact only if the target function is of order of 2 or less",
        "correct": true
      }
    ],
    "tag": "scipy",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "<p>The correct way to use scipy.integrate.quad to integrate the following function is:<br><code>def f(x, p):<br>    return 2*x - p</code></p>",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "quad(f, x, y, p)",
        "correct": true
      },
      {
        "answer": "quad(f(,p), y, x)",
        "correct": false
      },
      {
        "answer": "quad(f(x, p), y, x)",
        "correct": false
      },
      {
        "answer": "quad(f, y=1, x = 4, p)",
        "correct": false
      }
    ],
    "tag": "scipy",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "Which of the following gives an error",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "ans = quad(f, 0, 4)",
        "correct": false
      },
      {
        "answer": "ans, = quad(f, 0, 4)",
        "correct": true
      },
      {
        "answer": "ans, err = quad(f, 0, 4)",
        "correct": false
      },
      {
        "answer": "ans, _ = quad(f, 0, 4)",
        "correct": false
      }
    ],
    "tag": "scipy",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "For x = np.array([1, 2, 3, 4, 5]), what is x[-2]",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "-1",
        "correct": false
      },
      {
        "answer": "1",
        "correct": false
      },
      {
        "answer": "4",
        "correct": true
      },
      {
        "answer": "5",
        "correct": false
      }
    ],
    "tag": "arrays",
    "lecture_file": "02_integration_1"
  },
  {
    "question": "For x = np.array([1, 2, 3, 4, 5]), what is x[::-1]",
    "type": "multiple_choice",
    "answers": [
      {
        "answer": "array([5])",
        "correct": false
      },
      {
        "answer": "array([5, 4, ,3, 2, 1])",
        "correct": true
      },
      {
        "answer": "array([5, 5, 5, 5, 5 ])",
        "correct": false
      },
      {
        "answer": "array([-1])",
        "correct": false
      }
    ],
    "tag": "arrays",
    "lecture_file": "02_integration_1"
  }
]
