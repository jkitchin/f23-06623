[{"question": "What will be the output of:<br>a = dict()<br>a['one'] = 1<br>print(a)", "type": "multiple_choice", "answers": [{"answer": "Error", "correct": false}, {"answer": "['one': 1]", "correct": false}, {"answer": "{'one': 1}", "correct": true}, {"answer": "{'one': '1'}", "correct": false}], "tag": "dictionary", "lecture_file": "13_constrained_optimization"}, {"question": "Which of the following is not a correct entry in a python dictionary", "type": "multiple_choice", "answers": [{"answer": "{1:'1'}", "correct": false}, {"answer": "{'a': 1}", "correct": false}, {"answer": "{5.23: 5}", "correct": false}, {"answer": "{[1, 2]: 'ab'}", "correct": true}], "tag": "dictionary", "lecture_file": "13_constrained_optimization"}, {"question": "Which of the following can be a way of printing the 'n'-th key in a dictionary 'dict'", "type": "multiple_choice", "answers": [{"answer": "dict.keys()[n]", "correct": false}, {"answer": "dict.keys(n)", "correct": false}, {"answer": "list(dict.keys())[n]", "correct": true}, {"answer": "dict.items()[n]", "correct": false}], "tag": "dictionary", "lecture_file": "13_constrained_optimization"}, {"question": "What can be a way of accessing the 'n'-th key and value separately from a dictionary", "type": "multiple_choice", "answers": [{"answer": "dict.keys()[n], dict.values()[n]", "correct": false}, {"answer": "d.items()[n]", "correct": false}, {"answer": "dict.keys(n), dict.values(n)", "correct": false}, {"answer": "for key, value in dict.items():<br>    print(key, value)", "correct": true}], "tag": "dictionary", "lecture_file": "13_constrained_optimization"}, {"question": "Constraints in scipy.optimize.minimize need to be functions which", "type": "multiple_choice", "answers": [{"answer": "always return zero when satisfied", "correct": false}, {"answer": "can return zero or are greater than zero when satisfied", "correct": true}, {"answer": "can return zero or are less than zero when satisfied", "correct": false}, {"answer": "can only return values which are less than zero", "correct": false}], "tag": "scipy constraints", "lecture_file": "13_constrained_optimization"}, {"question": "For multiple constraints, the argument 'constraints' in scipy.optimize.minimize needs to be", "type": "multiple_choice", "answers": [{"answer": "a dictionary", "correct": false}, {"answer": "a list", "correct": false}, {"answer": "a list of dictionaries", "correct": true}, {"answer": "a dictionary of lists", "correct": false}], "tag": "scipy constraints", "lecture_file": "13_constrained_optimization"}, {"question": "<pre><code class=\"language-python\">def f(X):\n    return -X[0]\n\nconstraints = {'type':'ineq', 'fun': f}\n</code></pre>\n<p>is a </p>", "type": "multiple_choice", "answers": [{"answer": "negativity constraint", "correct": true}, {"answer": "positivity constraint", "correct": false}, {"answer": "equality constraint", "correct": false}, {"answer": "None of the above", "correct": false}], "tag": "scipy constraints", "lecture_file": "13_constrained_optimization"}, {"question": "Which equation from the options can be expressed as the following constraint function:<br><br>def f(X):<br>    x, y = X<br>    return -(2x + 3y - 11)<br>constraints = {'type':'ineq', 'fun':f}", "type": "multiple_choice", "answers": [{"answer": "2x + 3y + 11 <= 0", "correct": false}, {"answer": "2x + 3y <= 11", "correct": true}, {"answer": "2x + 3y >=11", "correct": false}, {"answer": "-2x-3y <=11", "correct": false}], "tag": "scipy constraints", "lecture_file": "13_constrained_optimization"}, {"question": "Which of the following solvers cannot be used with constraints in scipy.optimize.minimize", "type": "multiple_choice", "answers": [{"answer": "BFGS", "correct": true}, {"answer": "SLSQP", "correct": false}, {"answer": "trust-constr", "correct": false}, {"answer": "COBYLA", "correct": false}], "tag": "scipy constraints", "lecture_file": "13_constrained_optimization"}, {"question": "The default solver in scipy.optimize.minimize when using constraints is", "type": "multiple_choice", "answers": [{"answer": "BFGS", "correct": false}, {"answer": "SLSQP", "correct": true}, {"answer": "trust-constr", "correct": false}, {"answer": "COBYLA", "correct": false}], "tag": "scipy constraints", "lecture_file": "13_constrained_optimization"}]